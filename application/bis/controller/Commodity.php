<?php
namespace app\bis\controller;

use think\Controller;
use app\common\validate\Commodity as CommodityValidate;

class Commodity extends Base
{
    private $validate;

    /***
     *
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->validate = new CommodityValidate;
    }
    /****
     * 团购商品列表页
     * @return mixed
     */
    public function index()
    {
        $bisID = $this->getAccountLogin()->business_id;
        $commodityData = model('Commodity')->getCommodityByBisID($bisID);
        return $this->fetch('',['results'=>$commodityData]);
    }

    /**
     * 添加团购商品
     * @return mixed
     */
    public function add()
    {
        $business_id = $this->getAccountLogin()->business_id;
        if(request()->isPost()){
            $data = input('post.');


            if(!$this->validate->scene('add')->check($data)){
                $this->error($this->validate->getError());
            }

            //获取分类完整路径
            $data['cat'] = '';
            if(!empty($data['se_category_id'])){
                $data['cat'] = implode('|',$data['se_category_id']);
            }
            if(!empty($data['store_ids'])){
                //获取总店经纬度
                $location = model('BusinessStore')->get($data['store_ids'][0]);
            }else{
                $this->error('所属分店不能为空');
            }

            $commodityData = [
                'business_id'=>$business_id,
                'name'=>$data['name'],
                'image'=>$data['image'],
                'category_id'=>$data['category_id'],
                'category_path'=>empty($data['se_category_id']) ? $data['category_id'] : $data['category_id'] . ',' . $data['cat'],
                'city_id'=>$data['city_id'],
                'city_path'=>empty($data['se_city_id']) ? $data['city_id'] : $data['city_id'] . ',' . $data['se_city_id'],
                'store_ids'=>empty($data['store_ids'])?'':implode(',',$data['store_ids']),
                'start_time'=>strtotime($data['start_time']),
                'end_time'=>strtotime($data['end_time']),
                'total_count'=>$data['total_count'],
                'origin_price'=>$data['origin_price'],
                'current_price'=>$data['current_price'],
                'coupons_start_time'=>strtotime($data['coupons_start_time']),
                'coupons_end_time'=>strtotime($data['coupons_end_time']),
                'notes'=>$data['notes'],
                'description'=>$data['description'],
                'business_account_id'=>$this->getAccountLogin()->id,
                'xpoint'=>$location->xpoint,
                'ypoint'=>$location->ypoint,
            ];
            $id = model('Commodity')->add($commodityData);
            if($id){
                $this->success('添加成功',url('commodity/index'));
            }else{
                $this->error('添加失败');
            }
        }else{
            $cities = model('City')->getFirstCity(0,true);
            $categories = model('Category')->getFirstCategory(0,true);
            $businessStores = model('BusinessStore')->getNormalStoreByBisId($business_id);
            $this->assign(['cities'=>$cities,'categories'=>$categories,'businessStores'=>$businessStores]);
            return $this->fetch();
        }
    }

    /****
     * 团购商品详情页
     */
    public function detail()
    {
        //获取一级城市的数据
        $cities = model('City')->getFirstCity(0,true);
        //获取一级栏目的数据
        $categories = model('Category')->getFirstCategory(0,true);
        //获取商户数据
//        $bis_ID = $this->request->param('id');
        $commodity_ID = input('get.id');
        if(!intval($commodity_ID)>0){
            $this->error('输入的参数不合法');
        }
        $commodityData = model('Commodity')->get(['id'=>$commodity_ID]);
        $seCategoryData=getSeCategoryName($commodityData['category_path']);
        $supportStoreData=getStoreIdsName($commodityData['store_ids']);
        $this->assign([
            'cities'=>$cities,
            'categories'=>$categories,
            'commodityData'=>$commodityData,
            'supportStoreData'=>empty($supportStoreData)?[]:$supportStoreData,
            'seCategoryData'=>empty($seCategoryData)?[]:$seCategoryData,
        ]);
        return $this->fetch();
    }

    /**
     * 更改状态 status
     * status=-1  为删除
     */
    public function status()
    {
        $data = $this->request->only(['id','status']);
        if (!$this->validate->scene('status')->check($data)){
            $this->error($this->validate->getError());
        }else{
            if($data['status']==-1){
                //status==-1时,为删除
                $res = model('Commodity')->save(['status'=>$data['status']],['id'=>$data['id']]);
                if($res){
                    $this->success('状态更新成功');
                }else{
                    $this->success('状态更新失败');
                }
            }
        }
    }
}
