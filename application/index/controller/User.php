<?php

namespace app\index\controller;

use think\Controller;
use think\captcha\Captcha;


class User extends Controller
{
    private $validate;
    /***
     * 初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->validate = new \app\common\validate\User();
    }

//    public function verify()
//    {
//        $captcha = new Captcha;
//        return $captcha->entry();
//    }

    /**
     * 登陆用户
     *
     * @return mixed
     */
    public function login()
    {
        //判断是否为登陆操作 若用户存在且密码正确 跳着到平台界面
        if(request()->isPost()){
            $data = input('post.');
            if(!$this->validate->scene('login')->check($data)) {
                $this->error($this->validate->getError(),'user/login');
            }
            $res = model('User')->get(['username'=>$data['username']]);
            if(!$res){
                $this->error('用户名不存在');
            }
            if($res['status']!=1){
                $this->error('该用户已被停止使用');
            }
            if(md5($data['password'].$res['code'])!= $res['password']){
                $this->error('密码不正确');
            }else{
                //更改登陆时间 time()生成时间戳
                model('User')->save(['last_login_time'=>time()],['id'=>$res['id']]);
                //保存用户信息 key value 作用域
                session('loginUser',$res,'user');
                //登陆成功
                $this->success('登陆成功','index/index');
            }
        } else{//否则渲染登陆界面
            //获取session
            $account = session('loginUser','','user');
            //判断是否已登陆
            if($account && $account->id){
                $this->redirect('index/index');
            }
            return $this->fetch();
        }
    }

    public function logout()
    {
        session(null,'user');
        $this->redirect('index/index');
    }

    /**
     * 注册用户
     *
     * @return mixed
     */
    public function register()
    {
        if(request()->isPost()){
            $data = input('post.');
            if(!$this->validate->scene('register')->check($data)){
                $this->error($this->validate->getError(),'user/register');
            }
            //判断用户是否存在
            $userResult=model('User')->get(['username'=>$data['username']]);
            if($userResult){
                $this->error('该用户存在，请重新分配');
            }
            $data['code'] = mt_rand(100,1000);
            $data['password'] = md5($data['password'].$data['code']);
            try{
                $user_id=model('User')->add($data);
            }catch (\Exception $e){
                $this->error($e->getMessage());
            }
            if($user_id){
                $this->success('注册成功');
            }else{
                $this->error('注册失败');
            }

        }
        return $this->fetch();
    }

}
