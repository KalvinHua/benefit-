<?php
namespace app\admin\controller;

use think\Controller;
use app\common\validate\Commodity as CommodityValidate;

class Commodity extends Controller
{
    private $validate;
    /***
     *初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->validate = new CommodityValidate;
    }

    /****
     * 团购商品列表页
     * @return mixed
     */
    public function index()
    {
        $data = input('get.');

        $map = [];
        //搜索功能 封装查询语句
        if(!empty($data['start_time']) && !empty($data['end_time']) && (strtotime($data['end_time'])>strtotime($data['start_time']))){
            $map[]=['start_time','<=',strtotime($data['start_time'])];  //开始时间小于或等于
            $map[]=['end_time','>=',strtotime($data['end_time'])];    //结束时间大于或等于
        }
        if(!empty($data['category_id'])){
            $map[]=['category_id','=',$data['category_id']];
        }
        if(!empty($data['city_id'])){
            $map[]=['city_id','=',$data['city_id']];
        }
        if(!empty($data['name'])){
            $map[]=['name','like','%'.$data['name'].'%'];
        }

        $commodities=model('Commodity')->getNormalCommodities($map);

        //获取一级城市的数据
        $cities = model('City')->getFirstCity(0,true);
        //获取一级栏目的数据
        $categories = model('Category')->getFirstCategory(0,true);
        $this->assign([
            'categories'=>$categories,
            'cities'=>$cities,
            'commodities'=>$commodities,
            'category_id'=>empty($data['category_id'])?'':$data['category_id'],
            'city_id'=>empty($data['city_id'])?'':$data['city_id'],
            'name'=>empty($data['name'])?'':$data['name'],
            'start_time'=>empty($data['start_time'])?'':$data['start_time'],
            'end_time'=>empty($data['end_time'])?'':$data['end_time'],
        ]);
        return $this->fetch();
    }

    /****
     * 团购商品申请表
     * @return mixed
     */
    public function apply()
    {
        $data = input('get.');

        $map = [];
        //搜索功能 封装查询语句
        if(!empty($data['start_time']) && !empty($data['end_time']) && (strtotime($data['end_time'])>strtotime($data['start_time']))){
            $map[]=['start_time','<=',strtotime($data['start_time'])];  //开始时间小于或等于
            $map[]=['end_time','>=',strtotime($data['end_time'])];    //结束时间大于或等于
        }
        if(!empty($data['category_id'])){
            $map[]=['category_id','=',$data['category_id']];
        }
        if(!empty($data['city_id'])){
            $map[]=['city_id','=',$data['city_id']];
        }
        if(!empty($data['name'])){
            $map[]=['name','like','%'.$data['name'].'%'];
        }

        $commodities=model('Commodity')->getAllCommodities($map);

        //获取一级城市的数据
        $cities = model('City')->getFirstCity(0,true);
        //获取一级栏目的数据
        $categories = model('Category')->getFirstCategory(0,true);
        $this->assign([
            'categories'=>$categories,
            'cities'=>$cities,
            'commodities'=>$commodities,
            'category_id'=>empty($data['category_id'])?'':$data['category_id'],
            'city_id'=>empty($data['city_id'])?'':$data['city_id'],
            'name'=>empty($data['name'])?'':$data['name'],
            'start_time'=>empty($data['start_time'])?'':$data['start_time'],
            'end_time'=>empty($data['end_time'])?'':$data['end_time'],
        ]);
        return $this->fetch();
    }

    /****
     * 团购商品详情页
     */
    public function detail()
    {
        //获取一级城市的数据
        $cities = model('City')->getFirstCity(0,true);
        //获取一级栏目的数据
        $categories = model('Category')->getFirstCategory(0,true);
        //获取商户数据
//        $bis_ID = $this->request->param('id');
        $commodity_ID = input('get.id');
        if(!intval($commodity_ID)>0){
            $this->error('输入的参数不合法');
        }
        $commodityData = model('Commodity')->get(['id'=>$commodity_ID]);
        $seCategoryData=getSeCategoryName($commodityData['category_path']);
        $supportStoreData=getStoreIdsName($commodityData['store_ids']);
        $this->assign([
            'cities'=>$cities,
            'categories'=>$categories,
            'commodityData'=>$commodityData,
            'supportStoreData'=>empty($supportStoreData)?[]:$supportStoreData,
            'seCategoryData'=>empty($seCategoryData)?[]:$seCategoryData,
        ]);
        return $this->fetch();
    }

    /**
     * 更改状态 status
     * status=-1  为删除
     */
    public function status()
    {
        $data = $this->request->only(['id','status']);
        if (!$this->validate->scene('status')->check($data)){
            $this->error($this->validate->getError());
        }else{
            //设置状态
            $res = model('Commodity')->save(['status' => $data['status']], ['id' => $data['id']]);
            if ($res) {
                $this->success('状态更新成功');
            } else {
                $this->success('状态更新失败');
            }

        }
    }
}
