<?php

namespace app\admin\controller;

use think\Controller;
use \app\admin\validate\Tradearea as TradeareaValidate;
use \app\common\model\Tradearea as TradeareayModel;


class Tradearea extends Controller
{
    /**
     * @var tradearea 模型对象  validate 验证器对象
     */
    private $tradearea;
    private $validate;

    /**
     * 初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->tradearea = new TradeareayModel;
        $this->validate = new TradeareaValidate;
    }

    /**
     * 获取并显示表中为一级的商圈 页面
     * parent_id为0为一级商圈页面
     * paren_id其他为其对应的商圈页面
     *
     * @return mixed
     */
    public function index()
    {
        //获取parent_id = id 用于获取父节点为id的节点
        $parent_id = $this->request->param('parent_id',0,'int');
        $tradeareas = $this->tradearea->getFirstTradearea($parent_id);
        $cities = model('City')->getFirstCity(0);
        $this->assign(['tradeareas' =>$tradeareas,'cities' => $cities]);
        return $this->fetch();
    }

    /**
     * 添加商圈页面
     *
     * @return mixed
     */
    public function add()
    {
        //获取已存在的一级商圈
        $parent_id = $this->request->param('parent_id',0,'int');
        $tradeareas = $this->tradearea->getFirstTradearea($parent_id,true);
        $cities = model('City')->getFirstCity(0);
        $this->assign(['tradeareas' =>$tradeareas,'cities' => $cities]);
        return $this->fetch();
    }

    /**
     * 添加商圈 保存
     *
     * @return mixed
     */
    public function save()
    {
        $data = $this->request->only(['name', 'city_id','parent_id']);

        if (!$this->validate->scene('add')->check($data))
        {
            $this->error($this->validate->getError());
        } else {
            $this->tradearea->addTradearea($data);
            $this->success('商圈'.$data['name'].'添加成功');
        }
    }

    /**
     * 获取修改商圈数据页面
     *
     * @param $id 数据id
     * @return mixed
     */
    public function edit($id)
    {
        if(intval($id)<1)
        {
            $this->error('参数不合法');
        }else{
            $tradearea = $this->tradearea->get($id);
            $tradeareas = $this->tradearea->getFirstTradearea(0,true);
            $cities = model('City')->getFirstCity(0);
            $this->assign(['tradearea'=>$tradearea,'tradeareas' =>$tradeareas,'cities' => $cities]);
        }
        return $this->fetch();
    }

    /**
     * 更新商圈信息 name 名称 city_id 城市id parent_id 父id
     *
     * @param int $id
     * @return mixed
     */
    public function update($id){
        $tradearea = $this->tradearea->get($id);
        $data=$this->request->param();
        if(!$this->validate->scene('update')->check($data)){
            $this->error($this->validate->getError);
        }else{
            // 只允许更新指定的字段数据
            $tradearea->allowField(['name','city_id','parent_id'])
                ->save($data);
            $this->success('商圈[' . $tradearea->name . ']更新成功');
        }
    }

    /**
     * 更改商圈 listorder
     *
     * @return mixed
     */
    public function listorder(){
        $data = $this->request->only(['id','listorder']);
        if(!$this->validate->scene('listorder')->check($data)) {
            $this->error($this->validate->getError());
        }else{
            $res=$this->tradearea->save(['listorder'=>$data['listorder']],['id'=>$data['id']]);
            if($res){
                $this->result($_SERVER['HTTP_REFERER'],1,'更新成功');
            }else{
                $this->result($_SERVER['HTTP_REFERER'],0,'更新失败');
            }
        }
    }


    /**
     * 更改状态 status
     * status=0/1 待审查/正常
     * status=-1  已删除
     *
     */
    public function status(){
        $data = $this->request->only(['id','status']);
        if (!$this->validate->scene('status')){
            $this->error($this->validate->getError());
        }else{
            //当不为删除时 即status = 0/1时
            if($data['status']!=-1){
                $res = $this->tradearea->save(['status'=>$data['status']],['id'=>$data['id']]);
                if($res){
                    $this->success('状态更新成功');
                }else{
                    $this->success('状态更新失败');
                }
            }else{  //当删除时  status = -1
                //判断是否存在子分类
                $results=$this->tradearea->where('parent_id',$data['id'])->select();
                if(count($results)>0){
                    $this->tradearea->save(['status' => $data['status']], ['id' => $data['id']]);
                    foreach($results as $key => $result){
                        $this->tradearea->update(['status' => $data['status'],'id' => $result->id]);
                    }
                    $this->success('删除成功');
                }else{
                    $res = $this->tradearea->save(['status' => $data['status']], ['id' => $data['id']]);
                    if ($res) {
                        $this->success('删除成功');
                    } else {
                        $this->success('删除失败');
                    }
                }
            }
        }
    }
}
